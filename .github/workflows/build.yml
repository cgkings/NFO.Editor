name: Build NFO Tools

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  PYTHONUNBUFFERED: 1
  PYTHONUTF8: 1
  PYTHONDONTWRITEBYTECODE: 1

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 安装系统依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y wine64 nsis
        sudo apt-get install -y mingw-w64 gcc-mingw-w64

    - name: 设置 Wine 环境
      run: |
        export WINEARCH=win64
        export WINEPREFIX=$HOME/.wine
        winecfg

    - name: 设置 Python 版本
      uses: actions/setup-python@v5
      with:
        python-version: '3.9.13'
        cache: 'pip'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt --no-cache-dir
        pip install pyinstaller==6.3.0

    - name: 设置构建名称
      id: set_build_name
      shell: bash
      run: |
        if [[ "$GITHUB_EVENT_NAME" == "push" && "$GITHUB_REF" =~ ^refs/tags/v.*$ ]]; then
          BUILD_NAME=${GITHUB_REF#refs/tags/}
        else
          BUILD_NAME=$(git describe --tags $(git rev-list --tags --max-count=1))
        fi
        echo "build_name=$BUILD_NAME" >> $GITHUB_ENV

    - name: 构建应用
      shell: bash
      run: |
        # 创建目录
        mkdir -p dist/NFOTools dist/shared shared_libs
        
        # Windows Python 路径设置
        export PYTHON_EMBED_ROOT=/usr/lib/python3.9
        
        # 构建 cg_crop
        pyinstaller --name "cg_crop" \
          --distpath "./dist/shared" \
          --workpath "./build/shared" \
          --onedir \
          --noconsole \
          --icon="chuizi.ico" \
          --add-data "chuizi.ico:." \
          --add-data "Img:Img" \
          --target-arch win64 \
          "cg_crop.py"
        
        # 第一次构建后保存共享依赖
        if [ -d "dist/shared/cg_crop/PyQt5" ]; then
          cp -r dist/shared/cg_crop/PyQt5 shared_libs/
        fi
        if [ -d "dist/shared/cg_crop/_internal" ]; then
          cp -r dist/shared/cg_crop/_internal shared_libs/
        fi
        cp dist/shared/cg_crop/cg_crop.exe dist/NFOTools/
        
        # 构建 NFO.Editor.Qt5
        pyinstaller --name "NFO.Editor.Qt5" \
          --distpath "./dist/shared" \
          --workpath "./build/shared" \
          --onedir \
          --noconsole \
          --icon="chuizi.ico" \
          --add-data "chuizi.ico:." \
          --add-data "mapping_actor.xml:." \
          --add-data "Img:Img" \
          --target-arch win64 \
          "NFO.Editor.Qt5.py"
        
        cp dist/shared/NFO.Editor.Qt5/NFO.Editor.Qt5.exe dist/NFOTools/
        
        # 构建 cg_rename
        pyinstaller --name "cg_rename" \
          --distpath "./dist/shared" \
          --workpath "./build/shared" \
          --onedir \
          --noconsole \
          --icon="chuizi.ico" \
          --add-data "chuizi.ico:." \
          --add-data "mapping_actor.xml:." \
          --target-arch win64 \
          "cg_rename.py"
        
        cp dist/shared/cg_rename/cg_rename.exe dist/NFOTools/
        
        # 构建 cg_dedupe
        pyinstaller --name "cg_dedupe" \
          --distpath "./dist/shared" \
          --workpath "./build/shared" \
          --onedir \
          --noconsole \
          --icon="chuizi.ico" \
          --add-data "chuizi.ico:." \
          --target-arch win64 \
          "cg_dedupe.py"
        
        cp dist/shared/cg_dedupe/cg_dedupe.exe dist/NFOTools/
        
        # 复制共享依赖和资源到最终目录
        cp -r shared_libs/* dist/NFOTools/
        cp -r Img dist/NFOTools/
        cp mapping_actor.xml dist/NFOTools/
        cp chuizi.ico dist/NFOTools/

    - name: 创建 NSIS 安装脚本
      run: |
        cat > installer.nsi << 'EOL'
        !include "MUI2.nsh"
        !define PRODUCT_NAME "NFO Tools"
        !define PRODUCT_VERSION "${{ env.build_name }}"
        !define PRODUCT_PUBLISHER "NFO Tools"

        Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
        OutFile "NFOTools.Setup.${{ env.build_name }}.exe"
        InstallDir "$PROGRAMFILES\NFO Tools"
        
        !insertmacro MUI_PAGE_WELCOME
        !insertmacro MUI_PAGE_DIRECTORY
        !insertmacro MUI_PAGE_INSTFILES
        !insertmacro MUI_PAGE_FINISH
        !insertmacro MUI_UNPAGE_CONFIRM
        !insertmacro MUI_UNPAGE_INSTFILES
        
        !insertmacro MUI_LANGUAGE "SimpChinese"
        
        Section "MainSection" SEC01
          SetOutPath "$INSTDIR"
          SetOverwrite ifnewer
          
          File /r "dist\NFOTools\*.*"
          
          CreateDirectory "$SMPROGRAMS\NFO Tools"
          CreateShortCut "$SMPROGRAMS\NFO Tools\NFO Editor.lnk" "$INSTDIR\NFO.Editor.Qt5.exe"
          CreateShortCut "$SMPROGRAMS\NFO Tools\CG Crop.lnk" "$INSTDIR\cg_crop.exe"
          CreateShortCut "$SMPROGRAMS\NFO Tools\CG Rename.lnk" "$INSTDIR\cg_rename.exe"
          CreateShortCut "$SMPROGRAMS\NFO Tools\NFO Dedupe.lnk" "$INSTDIR\cg_dedupe.exe"
          
          WriteUninstaller "$INSTDIR\uninstall.exe"
          CreateShortCut "$SMPROGRAMS\NFO Tools\Uninstall.lnk" "$INSTDIR\uninstall.exe"
        SectionEnd
        
        Section "Uninstall"
          Delete "$INSTDIR\uninstall.exe"
          Delete "$INSTDIR\cg_crop.exe"
          Delete "$INSTDIR\NFO.Editor.Qt5.exe"
          Delete "$INSTDIR\cg_rename.exe"
          Delete "$INSTDIR\cg_dedupe.exe"
          Delete "$INSTDIR\chuizi.ico"
          
          Delete "$SMPROGRAMS\NFO Tools\NFO Editor.lnk"
          Delete "$SMPROGRAMS\NFO Tools\CG Crop.lnk"
          Delete "$SMPROGRAMS\NFO Tools\CG Rename.lnk"
          Delete "$SMPROGRAMS\NFO Tools\NFO Dedupe.lnk"
          Delete "$SMPROGRAMS\NFO Tools\Uninstall.lnk"
          
          RMDir /r "$INSTDIR"
          RMDir "$SMPROGRAMS\NFO Tools"
        SectionEnd
        EOL

    - name: 构建安装程序
      run: makensis installer.nsi

    - name: 上传构建工件
      uses: actions/upload-artifact@v4
      with:
        name: nfo-tools-installer
        path: NFOTools.Setup.${{ env.build_name }}.exe
        retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        if: github.event_name == 'workflow_dispatch'

      - name: Create Tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag ${{ env.build_name }}
          git push origin ${{ env.build_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 下载安装程序
        uses: actions/download-artifact@v4
        with:
          name: nfo-tools-installer
          path: dist

      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.build_name }}
          tag_name: ${{ env.build_name }}
          draft: false
          prerelease: false
          files: dist/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}