name: Build NFO Tools

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  PYTHONUNBUFFERED: 1
  PYTHONUTF8: 1
  PYTHONDONTWRITEBYTECODE: 1

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 15
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 设置 Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        check-latest: false
        
    - name: 缓存构建环境
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          build
          dist/shared
          ~\AppData\Local\Temp\chocolatey
          C:\ProgramData\chocolatey
        key: ${{ runner.os }}-build-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-
          
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt
        pip install pyinstaller==6.3.0
        
    - name: 设置构建名称
      id: set_build_name
      shell: pwsh
      run: |
        git fetch --tags
        $latestTag = git describe --tags $(git rev-list --tags --max-count=1)
        if ($null -eq $latestTag) {
          Write-Error "未找到任何标签，无法继续。"
          exit 1
        }
        echo "build_name=$latestTag" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: 构建应用
      shell: pwsh
      run: |
        # 构建前清理
        Remove-Item -Path "dist" -Recurse -Force -ErrorAction SilentlyContinue
        Remove-Item -Path "build" -Recurse -Force -ErrorAction SilentlyContinue
        Remove-Item -Path "shared_libs" -Recurse -Force -ErrorAction SilentlyContinue
        
        # 创建必要目录
        New-Item -Path "dist/NFOTools" -ItemType Directory -Force
        New-Item -Path "shared_libs" -ItemType Directory -Force
        
        # 基础构建参数
        $commonParams = @(
          "--distpath", "./dist/shared",
          "--workpath", "./build/shared",
          "--onedir",
          "--noconsole",
          "--icon=chuizi.ico",
          "--strip",
          "--noupx",
          "--clean"
        )
        
        # 基础排除模块
        $excludeModules = @(
          "--exclude-module", "unittest",
          "--exclude-module", "test",
          "--exclude-module", "tkinter",
          "--exclude", "Qt5WebEngine*",
          "--exclude", "Qt5Quick*",
          "--exclude", "Qt5Designer*",
          "--exclude", "Qt5Network*",
          "--exclude", "Qt5Qml*"
        )
        
        # 基础隐式导入
        $hiddenImports = @(
          "--hidden-import", "win32com",
          "--hidden-import", "win32com.client",
          "--hidden-import", "win32com.shell",
          "--hidden-import", "pythoncom",
          "--hidden-import", "pywintypes",
          "--hidden-import", "winshell",
          "--hidden-import", "PIL",
          "--hidden-import", "PIL._imaging",
          "--hidden-import", "PIL.Image"
        )

        # 构建 NFO.Editor.Qt5
        Write-Host "开始构建 NFO.Editor.Qt5..."
        python -OO -m PyInstaller @commonParams `
          --name "NFO.Editor.Qt5" `
          @excludeModules `
          @hiddenImports `
          --add-data "chuizi.ico;." `
          --add-data "mapping_actor.xml;." `
          --add-data "Img;Img" `
          "NFO.Editor.Qt5.py"
        
        if (-not $?) {
            Write-Error "构建 NFO.Editor.Qt5 失败"
            exit 1
        }
        
        Write-Host "移动 NFO.Editor.Qt5 文件..."
        Move-Item -Path "dist/shared/NFO.Editor.Qt5/NFO.Editor.Qt5.exe" -Destination "dist/NFOTools/" -Force
        
        if (Test-Path "dist/shared/NFO.Editor.Qt5/PyQt5") {
          Move-Item -Path "dist/shared/NFO.Editor.Qt5/PyQt5" -Destination "shared_libs/" -Force
        }
        if (Test-Path "dist/shared/NFO.Editor.Qt5/_internal") {
          Move-Item -Path "dist/shared/NFO.Editor.Qt5/_internal" -Destination "shared_libs/" -Force
        }
        Remove-Item -Path "dist/shared/NFO.Editor.Qt5" -Recurse -Force -ErrorAction SilentlyContinue
        
        # 构建其他工具
        $otherTools = @("cg_crop", "cg_rename", "cg_dedupe")
        foreach ($tool in $otherTools) {
          Write-Host "开始构建 $tool..."
          python -OO -m PyInstaller @commonParams `
            --name $tool `
            @excludeModules `
            @hiddenImports `
            --add-data "chuizi.ico;." `
            --add-data "Img;Img" `
            "${tool}.py"
          
          if (-not $?) {
              Write-Error "构建 $tool 失败"
              exit 1
          }
            
          Write-Host "移动 $tool 文件..."
          Move-Item -Path "dist/shared/$tool/$tool.exe" -Destination "dist/NFOTools/" -Force
          Remove-Item -Path "dist/shared/$tool" -Recurse -Force -ErrorAction SilentlyContinue
        }
        
        Write-Host "移动共享依赖..."
        Copy-Item -Path "shared_libs/*" -Destination "dist/NFOTools/" -Recurse -Force
        
        Write-Host "移动资源文件..."
        Copy-Item -Path "Img" -Destination "dist/NFOTools/" -Recurse -Force
        Copy-Item -Path "mapping_actor.xml" -Destination "dist/NFOTools/" -Force
        Copy-Item -Path "chuizi.ico" -Destination "dist/NFOTools/" -Force

    - name: 安装 NSIS
      run: |
        choco install nsis -y --no-progress --version=3.09
      
    - name: 创建并构建安装包
      shell: pwsh
      run: |
        @'
        !include "MUI2.nsh"
        !define PRODUCT_NAME "NFO Tools"
        !define PRODUCT_VERSION "${{ env.build_name }}"
        !define PRODUCT_PUBLISHER "NFO Tools"

        Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
        OutFile "NFOTools.Setup.${{ env.build_name }}.exe"
        InstallDir "$PROGRAMFILES\NFO Tools"
        
        !insertmacro MUI_PAGE_WELCOME
        !insertmacro MUI_PAGE_DIRECTORY
        !insertmacro MUI_PAGE_INSTFILES
        !insertmacro MUI_PAGE_FINISH
        !insertmacro MUI_UNPAGE_CONFIRM
        !insertmacro MUI_UNPAGE_INSTFILES
        
        !insertmacro MUI_LANGUAGE "SimpChinese"
        
        Section "MainSection" SEC01
          SetOutPath "$INSTDIR"
          SetOverwrite ifnewer
          
          File /r "dist\NFOTools\*.*"
          
          CreateDirectory "$SMPROGRAMS\NFO Tools"
          CreateShortCut "$SMPROGRAMS\NFO Tools\NFO Editor.lnk" "$INSTDIR\NFO.Editor.Qt5.exe"
          CreateShortCut "$SMPROGRAMS\NFO Tools\CG Crop.lnk" "$INSTDIR\cg_crop.exe"
          CreateShortCut "$SMPROGRAMS\NFO Tools\CG Rename.lnk" "$INSTDIR\cg_rename.exe"
          CreateShortCut "$SMPROGRAMS\NFO Tools\NFO Dedupe.lnk" "$INSTDIR\cg_dedupe.exe"
          
          WriteUninstaller "$INSTDIR\uninstall.exe"
          CreateShortCut "$SMPROGRAMS\NFO Tools\Uninstall.lnk" "$INSTDIR\uninstall.exe"
        SectionEnd
        
        Section "Uninstall"
          Delete "$INSTDIR\uninstall.exe"
          Delete "$INSTDIR\cg_crop.exe"
          Delete "$INSTDIR\NFO.Editor.Qt5.exe"
          Delete "$INSTDIR\cg_rename.exe"
          Delete "$INSTDIR\cg_dedupe.exe"
          Delete "$INSTDIR\chuizi.ico"
          
          Delete "$SMPROGRAMS\NFO Tools\NFO Editor.lnk"
          Delete "$SMPROGRAMS\NFO Tools\CG Crop.lnk"
          Delete "$SMPROGRAMS\NFO Tools\CG Rename.lnk"
          Delete "$SMPROGRAMS\NFO Tools\NFO Dedupe.lnk"
          Delete "$SMPROGRAMS\NFO Tools\Uninstall.lnk"
          
          RMDir /r "$INSTDIR"
          RMDir "$SMPROGRAMS\NFO Tools"
        SectionEnd
        '@ | Out-File -FilePath "installer.nsi" -Encoding utf8
        
        Write-Host "开始构建安装包..."
        makensis installer.nsi
        
        if (-not $?) {
            Write-Error "构建安装包失败"
            exit 1
        }

    - name: 上传构建工件
      uses: actions/upload-artifact@v4
      with:
        name: nfo-tools-installer
        path: NFOTools.Setup.${{ env.build_name }}.exe
        retention-days: 7