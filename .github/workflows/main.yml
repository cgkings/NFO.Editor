name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: pip install pyinstaller

      - name: Build executable
        run: pyinstaller --onefile --noconsole --icon="pic/chuizi.ico" "NFO.Editor.py"

      - name: Copy Python script
        run: copy NFO.Editor.py dist\

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-windows  # 确保与后续任务中的名称匹配
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: [build-windows]

    steps:
      - name: Download Build Artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-windows  # 与上传工件时的名称匹配
          path: dist/windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1  # 根据最新版本调整
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows Executable
        uses: actions/upload-release-asset@v1  # 根据最新版本调整
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/windows/NFO.Editor.exe
          asset_name: NFO.Editor_windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Python Script for Windows
        uses: actions/upload-release-asset@v1  # 根据最新版本调整
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/windows/NFO.Editor.py
          asset_name: NFO.Editor_windows.py
          asset_content_type: text/x-python